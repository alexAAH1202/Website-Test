import React, { useState, useEffect } from 'react';
import { getBusinessDetails, updateBusinessDetails } from '../services/api';
import '../styles/BusinessBookingSettings.css';

function BusinessBookingSettings() {
  const [business, setBusiness] = useState(null);
  const [bookingUrl, setBookingUrl] = useState('');

  useEffect(() => {
    fetchBusinessDetails();
  }, []);

  const fetchBusinessDetails = async () => {
    try {
      const data = await getBusinessDetails();
      setBusiness(data);
      setBookingUrl(`${window.location.origin}/book/${data.signupName}`);
    } catch (error) {
      console.error('Error fetching business details:', error);
    }
  };

  const handleChange = (e) => {
    setBusiness({ ...business, [e.target.name]: e.target.value });
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    try {
      await updateBusinessDetails(business);
      alert('Business details updated successfully!');
    } catch (error) {
      console.error('Error updating business details:', error);
      alert('Failed to update business details. Please try again.');
    }
  };

  if (!business) return <div>Loading...</div>;

  return (
    <div className="business-booking-settings dashboard-widget">
      <h2>Online Booking Settings</h2>
      <form onSubmit={handleSubmit}>
        <div className="form-group">
          <label htmlFor="businessName">Business Name:</label>
          <input
            type="text"
            id="businessName"
            name="name"
            value={business.name}
            onChange={handleChange}
            required
          />
        </div>
        <div className="form-group">
          <label htmlFor="signupName">Signup Name:</label>
          <input
            type="text"
            id="signupName"
            name="signupName"
            value={business.signupName}
            onChange={handleChange}
            required
          />
        </div>
        <div className="form-group">
          <label>Public Booking URL:</label>
          <div className="url-group">
            <input type="text" value={bookingUrl} readOnly />
            <button type="button" onClick={() => navigator.clipboard.writeText(bookingUrl)}>
              Copy
            </button>
          </div>
        </div>
        <button type="submit" className="save-button">Save Settings</button>
      </form>
    </div>
  );
}

export default BusinessBookingSettings;